{
  "swagger": "2.0",
  "info": {
    "description": "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.",
    "version": "1.0.0",
    "title": "Swagger Petstore",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host1": "/localhost:7002",
  "host": "/localhost/carpooling-api/",
  "basePath": "/api/",
  "tags": [
    {
      "name": "carpooling",
      "description": "Access to Petstore orders"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/getCarSearching": {
      "get": {
        "tags": [
          "carpooling"
        ],
        "summary": "获取车辆行程列表",
        "description": "",
        "operationId": "getCarSearching",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/getPassengerSearching": {
      "get": {
        "tags": [
          "carpooling"
        ],
        "summary": "获取乘客行程列表",
        "description": "",
        "operationId": "getPassengerSearching",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/getPassengerInfo": {
      "get": {
        "tags": [
          "carpooling"
        ],
        "summary": "获取乘客信息",
        "description": "",
        "operationId": "getPassengerInfo",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/getOwnerInfo": {
      "get": {
        "tags": [
          "carpooling"
        ],
        "summary": "获取车主信息",
        "description": "",
        "operationId": "getOwnerInfo",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/publishedFindCar": {
      "post": {
        "tags": [
          "carpooling"
        ],
        "summary": "发布车辆行程",
        "description": "发布车辆行程",
        "operationId": "publishedFindCar",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Pet object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/publishedFindCar"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid status value"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/publishedFindPassenger": {
      "post": {
        "tags": [
          "carpooling"
        ],
        "summary": "发布乘客行程",
        "description": "发布乘客行程",
        "operationId": "publishedFindPassenger",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Pet object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/publishedFindPassenger"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid status value"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/savePassengerInfo": {
      "post": {
        "tags": [
          "carpooling"
        ],
        "summary": "保存乘客信息",
        "description": "保存乘客信息",
        "operationId": "savePassengerInfo",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Pet object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/savePassengerInfo"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid status value"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/saveOwnerInfo": {
      "post": {
        "tags": [
          "carpooling"
        ],
        "summary": "保存车主信息",
        "description": "保存车主信息",
        "operationId": "saveOwnerInfo",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Pet object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/saveOwnerInfo"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid status value"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    }
    
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "publishedFindCar": {
      "type": "object",
      "required": [
        "startAddress",
        "endAddress",
        "driverName",
        "driverPhone",
        "driverRemark",
        "startTime",
        "endTime",
        "publishTime",
        "residueSeat",
        "driverGender"
      ],
      "properties": {
        "startAddress": {
          "type": "string",
          "example": "上海市嘉定广场"
        },
        "endAddress": {
          "type": "string",
          "example": "上海市浦东广场"
        },
        "driverName": {
          "type": "string",
          "example": "王司机"
        },
        "driverPhone": {
          "type": "string",
          "example": "王司机"
        },
        "driverRemark": {
          "type": "string",
          "example": "5yuan"
        },
        "startTime": {
          "type": "string",
          "example": "2021-11-05 04:00:00"
        },
        "endTime": {
          "type": "string",
          "example": "2021-11-05 04:00:00"
        },
        "publishTime": {
          "type": "string",
          "example": "2021-11-05 04:00:00"
        },
        "residueSeat": {
          "type": "integer",
          "format": "int32"
        },
        "driverGender": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "publishedFindPassenger": {
      "type": "object",
      "required": [
        "startAddress",
        "endAddress",
        "userName",
        "userPhone",
        "userRemark",
        "startTime",
        "endTime",
        "publishTime",
        "quantity",
        "userGender"
      ],
      "properties": {
        "startAddress": {
          "type": "string",
          "example": "上海市嘉定广场"
        },
        "endAddress": {
          "type": "string",
          "example": "上海市浦东广场"
        },
        "userName": {
          "type": "string",
          "example": "王3"
        },
        "userPhone": {
          "type": "string",
          "example": "15380101739"
        },
        "userRemark": {
          "type": "string",
          "example": "5yuan"
        },
        "startTime": {
          "type": "string",
          "example": "2021-11-05 04:00:00"
        },
        "endTime": {
          "type": "string",
          "example": "2021-11-05 04:00:00"
        },
        "publishTime": {
          "type": "string",
          "example": "2021-11-05 04:00:00"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "userGender": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "savePassengerInfo": {
      "type": "object",
      "required": [
        "name",
        "phone",
        "gender"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "王小姐"
        },
        "phone": {
          "type": "string",
          "example": "15380101739"
        },
        "gender": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "saveOwnerInfo": {
      "type": "object",
      "required": [
        "driverName",
        "driverPhone",
        "driverSeating",
        "driverGender",
        "plateNumber",
        "vehicleBrand"
      ],
      "properties": {
        "driverName": {
          "type": "string",
          "example": "刘司机"
        },
        "driverPhone": {
          "type": "string",
          "example": "15380101739"
        },
        "driverSeating": {
          "type": "integer",
          "format": "int32"
        },
        "driverGender": {
          "type": "integer",
          "format": "int32"
        },
        "plateNumber": {
          "type": "string",
          "example": "沪A123112"
        },
        "vehicleBrand": {
          "type": "string",
          "example": "大众"
        }
      },
      "xml": {
        "name": "Pet"
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}